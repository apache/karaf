#
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.
#

#
# This file contains localization strings for configuration labels and
# descriptions as used in the metatype.xml descriptor

management.name = Apache Karaf JMX Management
management.description = Configuration of Apache Karaf JMX Management

rmiRegistryHost.name = RMI Registry Host
rmiRegistryHost.description = host of the registry for the exported RMI service. Blank for all interfaces

rmiRegistryPort.name = RMI Registry Port
rmiRegistryPort.description = port of the registry for the exported RMI service

rmiServerHost.name = RMI Server Host
rmiServerHost.description = host of the server for the exported RMI objects. Blank for all interfaces

rmiServerPort.name = RMI Server Port
rmiServerPort.description = port of the server for the exported RMI objects

createRmiRegistry.name = Create RMI Registry
createRmiRegistry.description = whether an embedded RMI Registry should be created on startup

locateRmiRegistry.name = Locate RMI Registry
locateRmiRegistry.description = whether an existing RMI Registry should be located on startup

locateExistingMBeanServerIfPossible.name = Locate Existing MBean Server If Possible
locateExistingMBeanServerIfPossible.description = whether an existing MBean Server should be located on startup

jmxRealm.name = Realm
jmxRealm.description = name of the JAAS realm used for authentication

serviceUrl.name = Service Url
serviceUrl.description = the service URL for the JMXConnectorServer

daemon.name = Daemon
daemon.description = whether any threads started for the JMXConnectorServer should be started as daemon threads

threaded.name = Threaded
threaded.description = whether the JMXConnectorServer should be started in a separate thread

objectName.name = ObjectName
objectName.description = the ObjectName used to register the JMXConnectorServer

secured.name = Secured
secured.description = whether to start MBean server with SSL

keyStoreAvailabilityTimeout.name = KeyStore Availability Timeout
keyStoreAvailabilityTimeout.description = Number of milisecond waiting for keystore to be loaded.

secureAlgorithm.name = Secure Algorithm
secureAlgorithm.descripion = Algorithm to use

secureProtocol.name = Secure Protocol
secureProtocol.description = Protocol to use

keyStore.name = Keystore Name
keyStore.desciption = Keystore name from keystore manager

keyAlias.name = Key Alias
keyAlias.description = Key alias to be used with secured connector

trustStore.name = Trustor Name
trustStore.description = Trustor name from keystore manager

authenticatorType.name = Authenticator type
authenticatorType.description = Authenticator to use. Available values are "none", "password", and "certificate"